// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _control_size{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const u64 * k1, const u64 * k2);
  const size_t sizes[3];

  u64 * key;
  f64 * width;
  f64 * height;
  icy_mem * key_area;
  icy_mem * width_area;
  icy_mem * height_area;
}control_size;

control_size * control_size_create(const char * optional_name);
void control_size_set(control_size * table, u64 key, f64 width, f64 height);
void control_size_insert(control_size * table, u64 * key, f64 * width, f64 * height, size_t count);
void control_size_lookup(control_size * table, u64 * keys, size_t * out_indexes, size_t count);
void control_size_remove(control_size * table, u64 * keys, size_t key_count);
void control_size_clear(control_size * table);
void control_size_unset(control_size * table, u64 key);
bool control_size_try_get(control_size * table, u64 * key, f64 * width, f64 * height);
void control_size_print(control_size * table);
size_t control_size_iter(control_size * table, u64 * keys, size_t keycnt, u64 * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
