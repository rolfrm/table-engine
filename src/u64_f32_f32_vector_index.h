// This file is auto generated by icy-table.
#include "icydb.h"
typedef struct _u64_f32_f32_vector_index{
  char ** column_names;
  char ** column_types;
  size_t count;
  const bool is_multi_table;
  const int column_count;
  int (*cmp) (const size_t * k1, const size_t * k2);
  const size_t sizes[2];

  size_t * index;
  f32_f32_vector_indexes * value;
  icy_mem * index_area;
  icy_mem * value_area;
}u64_f32_f32_vector_index;

u64_f32_f32_vector_index * u64_f32_f32_vector_index_create(const char * optional_name);
void u64_f32_f32_vector_index_set(u64_f32_f32_vector_index * table, size_t index, f32_f32_vector_indexes value);
void u64_f32_f32_vector_index_insert(u64_f32_f32_vector_index * table, size_t * index, f32_f32_vector_indexes * value, size_t count);
void u64_f32_f32_vector_index_lookup(u64_f32_f32_vector_index * table, size_t * keys, size_t * out_indexes, size_t count);
void u64_f32_f32_vector_index_remove(u64_f32_f32_vector_index * table, size_t * keys, size_t key_count);
void u64_f32_f32_vector_index_clear(u64_f32_f32_vector_index * table);
void u64_f32_f32_vector_index_unset(u64_f32_f32_vector_index * table, size_t key);
bool u64_f32_f32_vector_index_try_get(u64_f32_f32_vector_index * table, size_t * index, f32_f32_vector_indexes * value);
void u64_f32_f32_vector_index_print(u64_f32_f32_vector_index * table);
size_t u64_f32_f32_vector_index_iter(u64_f32_f32_vector_index * table, size_t * keys, size_t keycnt, size_t * optional_keys_out, size_t * indexes, size_t cnt, size_t * iterator);
